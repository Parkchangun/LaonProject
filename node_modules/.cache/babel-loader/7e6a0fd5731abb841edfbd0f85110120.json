{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/LaonProject/front/src/components/toDo/TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport ProgressBar from '@ramonak/react-progress-bar';\nimport { MainBlock } from '../../styles/CommonStyle';\nimport TodoItem from './TodoItem';\nimport { useTodoState, useTodoDispatch } from '../context/ToDoContext';\nimport { getTodo } from '../../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoBlock = styled.div`\n  ${MainBlock}\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    width: 8px;\n    background-color: #20c997;\n    border-radius: 16px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 16px;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n  border: 5px solid white;\n`;\n_c = TodoBlock;\nconst TaskBlock = styled.div`\n  .tasks-left {\n    color: #20c997;\n    font-size: 1.2rem;\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n    font-weight: bold;\n  }\n`;\n_c2 = TaskBlock;\n\nfunction TodoList() {\n  _s();\n\n  const todos = useTodoState();\n  const dispatch = useTodoDispatch();\n  const undoneTasks = todos.filter(todo => !todo.done);\n  const doneTasks = todos.filter(todo => todo.done);\n  console.log(todos); //TodoList DownLoad\n\n  useEffect(() => {\n    console.log('effect');\n\n    (async () => {\n      const data = await getTodo();\n      console.log(data); // dispatch({ type: 'LOAD', data });\n    })();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(TodoBlock, {\n    children: [/*#__PURE__*/_jsxDEV(TaskBlock, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-left\",\n        children: [\"\\uD560 \\uC77C \", undoneTasks.length, \"\\uAC1C \\uB0A8\\uC74C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        completed: doneTasks.length / todos.length * 100,\n        height: \"10px\",\n        isLabelVisible: false,\n        bgColor: \"#20c997\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      id: todo.id,\n      text: todo.text,\n      done: todo.done\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"Zw3zcyz2WinvI6F0XJQPAH5bfYo=\", false, function () {\n  return [useTodoState, useTodoDispatch];\n});\n\n_c3 = TodoList;\nexport default TodoList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TodoBlock\");\n$RefreshReg$(_c2, \"TaskBlock\");\n$RefreshReg$(_c3, \"TodoList\");","map":{"version":3,"sources":["/Users/chan/Desktop/LaonProject/front/src/components/toDo/TodoList.jsx"],"names":["React","useEffect","styled","ProgressBar","MainBlock","TodoItem","useTodoState","useTodoDispatch","getTodo","TodoBlock","div","TaskBlock","TodoList","todos","dispatch","undoneTasks","filter","todo","done","doneTasks","console","log","data","length","map","id","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,wBAA9C;AACA,SAASC,OAAT,QAAwB,eAAxB;;AAEA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B,IAAIN,SAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;KAAMK,S;AAiBN,MAAME,SAAS,GAAGT,MAAM,CAACQ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,S;;AAUN,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,KAAK,GAAGP,YAAY,EAA1B;AACA,QAAMQ,QAAQ,GAAGP,eAAe,EAAhC;AACA,QAAMQ,WAAW,GAAGF,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACC,IAA7B,CAApB;AACA,QAAMC,SAAS,GAAGN,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,IAA5B,CAAlB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EANkB,CAQlB;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,KAAC,YAAY;AACX,YAAMC,IAAI,GAAG,MAAMd,OAAO,EAA1B;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,EAFW,CAGX;AACD,KAJD;AAKD,GAPQ,EAON,CAACR,QAAD,CAPM,CAAT;AASA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,qCAAiCC,WAAW,CAACQ,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AACE,QAAA,SAAS,EAAGJ,SAAS,CAACI,MAAV,GAAmBV,KAAK,CAACU,MAA1B,GAAoC,GADjD;AAEE,QAAA,MAAM,EAAC,MAFT;AAGE,QAAA,cAAc,EAAE,KAHlB;AAIE,QAAA,OAAO,EAAC;AAJV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGV,KAAK,CAACW,GAAN,CAAWP,IAAD,iBACT,QAAC,QAAD;AAEE,MAAA,EAAE,EAAEA,IAAI,CAACQ,EAFX;AAGE,MAAA,IAAI,EAAER,IAAI,CAACS,IAHb;AAIE,MAAA,IAAI,EAAET,IAAI,CAACC;AAJb,OACOD,IAAI,CAACQ,EADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAVH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAvCQb,Q;UACON,Y,EACGC,e;;;MAFVK,Q;AAyCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport ProgressBar from '@ramonak/react-progress-bar';\nimport { MainBlock } from '../../styles/CommonStyle';\nimport TodoItem from './TodoItem';\nimport { useTodoState, useTodoDispatch } from '../context/ToDoContext';\nimport { getTodo } from '../../api/api';\n\nconst TodoBlock = styled.div`\n  ${MainBlock}\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n  &::-webkit-scrollbar-thumb {\n    width: 8px;\n    background-color: #20c997;\n    border-radius: 16px;\n  }\n  &::-webkit-scrollbar-track {\n    border-radius: 16px;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n  border: 5px solid white;\n`;\n\nconst TaskBlock = styled.div`\n  .tasks-left {\n    color: #20c997;\n    font-size: 1.2rem;\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n    font-weight: bold;\n  }\n`;\n\nfunction TodoList() {\n  const todos = useTodoState();\n  const dispatch = useTodoDispatch();\n  const undoneTasks = todos.filter((todo) => !todo.done);\n  const doneTasks = todos.filter((todo) => todo.done);\n\n  console.log(todos);\n\n  //TodoList DownLoad\n  useEffect(() => {\n    console.log('effect');\n    (async () => {\n      const data = await getTodo();\n      console.log(data);\n      // dispatch({ type: 'LOAD', data });\n    })();\n  }, [dispatch]);\n\n  return (\n    <TodoBlock>\n      <TaskBlock>\n        <div className='tasks-left'>할 일 {undoneTasks.length}개 남음</div>\n        <ProgressBar\n          completed={(doneTasks.length / todos.length) * 100}\n          height='10px'\n          isLabelVisible={false}\n          bgColor='#20c997'\n        />\n      </TaskBlock>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          id={todo.id}\n          text={todo.text}\n          done={todo.done}\n        />\n      ))}\n    </TodoBlock>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}