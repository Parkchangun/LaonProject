{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/LaonProject/front/src/components/context/ToDoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\nconst TodoNextIdContext = /*#__PURE__*/createContext();\nexport function TodoProvider({\n  children,\n  initialTodos\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n  return /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispatch,\n      children: /*#__PURE__*/_jsxDEV(TodoNextIdContext.Provider, {\n        value: nextId,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoProvider, \"MLelIZr2z8XWFJ9lCw3UijgeTSM=\");\n\n_c = TodoProvider;\nexport function useTodoState() {\n  _s2();\n\n  const context = useContext(TodoStateContext);\n\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n\n  return context;\n}\n\n_s2(useTodoState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useTodoDispatch() {\n  _s3();\n\n  const context = useContext(TodoDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n\n  return context;\n}\n\n_s3(useTodoDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useTodoNextId() {\n  _s4();\n\n  const context = useContext(TodoNextIdContext);\n\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n\n  return context;\n}\n\n_s4(useTodoNextId, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/Users/chan/Desktop/LaonProject/front/src/components/context/ToDoContext.js"],"names":["React","createContext","useContext","useReducer","useRef","todoReducer","state","action","type","concat","todo","map","id","done","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","initialTodos","dispatch","nextId","useTodoState","context","useTodoDispatch","useTodoNextId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,MAAvD,QAAqE,OAArE;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,IAApB,CAAP;;AACF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACK,GAAN,CAAWD,IAAD,IACfA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAAnB,GAAwB,EAAE,GAAGF,IAAL;AAAWG,QAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAAvB,OAAxB,GAAwDH,IADnD,CAAP;;AAGF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACQ,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYL,MAAM,CAACK,EAA1C,CAAP;;AACF;AACE,YAAM,IAAIG,KAAJ,CAAW,0BAAyBR,MAAM,CAACC,IAAK,EAAhD,CAAN;AAVJ;AAYD;;AAED,MAAMQ,gBAAgB,gBAAGf,aAAa,EAAtC;AACA,MAAMgB,mBAAmB,gBAAGhB,aAAa,EAAzC;AACA,MAAMiB,iBAAiB,gBAAGjB,aAAa,EAAvC;AAEA,OAAO,SAASkB,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAtB,EAAkD;AAAA;;AACvD,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,UAAU,CAACE,WAAD,EAAcgB,YAAd,CAApC;AACA,QAAME,MAAM,GAAGnB,MAAM,CAAC,CAAD,CAArB;AAEA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEE,KAAlC;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEgB,QAArC;AAAA,6BACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,QAAA,KAAK,EAAEC,MAAnC;AAAA,kBACGH;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAbeD,Y;;KAAAA,Y;AAehB,OAAO,SAASK,YAAT,GAAwB;AAAA;;AAC7B,QAAMC,OAAO,GAAGvB,UAAU,CAACc,gBAAD,CAA1B;;AACA,MAAI,CAACS,OAAL,EAAc;AACZ,UAAM,IAAIV,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOU,OAAP;AACD;;IANeD,Y;;AAOhB,OAAO,SAASE,eAAT,GAA2B;AAAA;;AAChC,QAAMD,OAAO,GAAGvB,UAAU,CAACe,mBAAD,CAA1B;;AACA,MAAI,CAACQ,OAAL,EAAc;AACZ,UAAM,IAAIV,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOU,OAAP;AACD;;IANeC,e;;AAOhB,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAMF,OAAO,GAAGvB,UAAU,CAACgB,iBAAD,CAA1B;;AACA,MAAI,CAACO,OAAL,EAAc;AACZ,UAAM,IAAIV,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOU,OAAP;AACD;;IANeE,a","sourcesContent":["import React, { createContext, useContext, useReducer, useRef } from 'react';\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case 'REMOVE':\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children, initialTodos }) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(5);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n  return context;\n}\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n  return context;\n}\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}