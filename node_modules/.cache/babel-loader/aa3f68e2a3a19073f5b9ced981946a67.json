{"ast":null,"code":"var _jsxFileName = \"/Users/chan/Desktop/LaonProject/front/src/components/context/ToDoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer, useRef } from 'react'; // const initialTodos = [\n//   {\n//     id: 100,\n//     text: '프로젝트 생성하기',\n//     done: true,\n//   },\n//   {\n//     id: 101,\n//     text: '컴포넌트 스타일링하기',\n//     done: true,\n//   },\n//   {\n//     id: 102,\n//     text: 'Context 만들기',\n//     done: false,\n//   },\n//   {\n//     id: 103,\n//     text: '기능 구현하기',\n//     done: false,\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTodos = [];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'LOAD':\n      return state.concat(action.datas);\n\n    case 'CREATE':\n      return state.concat(action.todo);\n\n    case 'TOGGLE':\n      return state.map(todo => todo.id === action.id ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'REMOVE':\n      return state.filter(todo => todo.id !== action.id);\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = /*#__PURE__*/createContext();\nconst TodoDispatchContext = /*#__PURE__*/createContext();\nconst TodoNextIdContext = /*#__PURE__*/createContext();\nexport function TodoProvider({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(state.id);\n  return /*#__PURE__*/_jsxDEV(TodoStateContext.Provider, {\n    value: state,\n    children: /*#__PURE__*/_jsxDEV(TodoDispatchContext.Provider, {\n      value: dispatch,\n      children: /*#__PURE__*/_jsxDEV(TodoNextIdContext.Provider, {\n        value: nextId,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoProvider, \"MLelIZr2z8XWFJ9lCw3UijgeTSM=\");\n\n_c = TodoProvider;\nexport function useTodoState() {\n  _s2();\n\n  const context = useContext(TodoStateContext);\n\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n\n  return context;\n}\n\n_s2(useTodoState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useTodoDispatch() {\n  _s3();\n\n  const context = useContext(TodoDispatchContext);\n\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n\n  return context;\n}\n\n_s3(useTodoDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport function useTodoNextId() {\n  _s4();\n\n  const context = useContext(TodoNextIdContext);\n\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n\n  return context;\n}\n\n_s4(useTodoNextId, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoProvider\");","map":{"version":3,"sources":["/Users/chan/Desktop/LaonProject/front/src/components/context/ToDoContext.js"],"names":["React","createContext","useContext","useReducer","useRef","initialTodos","todoReducer","state","action","type","concat","datas","todo","map","id","done","filter","Error","TodoStateContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","children","dispatch","nextId","useTodoState","context","useTodoDispatch","useTodoNextId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,MAAvD,QAAqE,OAArE,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,YAAY,GAAG,EAArB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,KAApB,CAAP;;AACF,SAAK,QAAL;AACE,aAAOJ,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACI,IAApB,CAAP;;AACF,SAAK,QAAL;AACE,aAAOL,KAAK,CAACM,GAAN,CAAWD,IAAD,IACfA,IAAI,CAACE,EAAL,KAAYN,MAAM,CAACM,EAAnB,GAAwB,EAAE,GAAGF,IAAL;AAAWG,QAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAAvB,OAAxB,GAAwDH,IADnD,CAAP;;AAGF,SAAK,QAAL;AACE,aAAOL,KAAK,CAACS,MAAN,CAAcJ,IAAD,IAAUA,IAAI,CAACE,EAAL,KAAYN,MAAM,CAACM,EAA1C,CAAP;;AACF;AACE,YAAM,IAAIG,KAAJ,CAAW,0BAAyBT,MAAM,CAACC,IAAK,EAAhD,CAAN;AAZJ;AAcD;;AAED,MAAMS,gBAAgB,gBAAGjB,aAAa,EAAtC;AACA,MAAMkB,mBAAmB,gBAAGlB,aAAa,EAAzC;AACA,MAAMmB,iBAAiB,gBAAGnB,aAAa,EAAvC;AAEA,OAAO,SAASoB,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAAA;;AACzC,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBpB,UAAU,CAACG,WAAD,EAAcD,YAAd,CAApC;AACA,QAAMmB,MAAM,GAAGpB,MAAM,CAACG,KAAK,CAACO,EAAP,CAArB;AAEA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAEP,KAAlC;AAAA,2BACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,MAAA,KAAK,EAAEgB,QAArC;AAAA,6BACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,QAAA,KAAK,EAAEC,MAAnC;AAAA,kBACGF;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAbeD,Y;;KAAAA,Y;AAehB,OAAO,SAASI,YAAT,GAAwB;AAAA;;AAC7B,QAAMC,OAAO,GAAGxB,UAAU,CAACgB,gBAAD,CAA1B;;AACA,MAAI,CAACQ,OAAL,EAAc;AACZ,UAAM,IAAIT,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOS,OAAP;AACD;;IANeD,Y;;AAOhB,OAAO,SAASE,eAAT,GAA2B;AAAA;;AAChC,QAAMD,OAAO,GAAGxB,UAAU,CAACiB,mBAAD,CAA1B;;AACA,MAAI,CAACO,OAAL,EAAc;AACZ,UAAM,IAAIT,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOS,OAAP;AACD;;IANeC,e;;AAOhB,OAAO,SAASC,aAAT,GAAyB;AAAA;;AAC9B,QAAMF,OAAO,GAAGxB,UAAU,CAACkB,iBAAD,CAA1B;;AACA,MAAI,CAACM,OAAL,EAAc;AACZ,UAAM,IAAIT,KAAJ,CAAU,0BAAV,CAAN;AACD;;AACD,SAAOS,OAAP;AACD;;IANeE,a","sourcesContent":["import React, { createContext, useContext, useReducer, useRef } from 'react';\n\n// const initialTodos = [\n//   {\n//     id: 100,\n//     text: '프로젝트 생성하기',\n//     done: true,\n//   },\n//   {\n//     id: 101,\n//     text: '컴포넌트 스타일링하기',\n//     done: true,\n//   },\n//   {\n//     id: 102,\n//     text: 'Context 만들기',\n//     done: false,\n//   },\n//   {\n//     id: 103,\n//     text: '기능 구현하기',\n//     done: false,\n//   },\n// ];\nconst initialTodos = [];\n\nfunction todoReducer(state, action) {\n  switch (action.type) {\n    case 'LOAD':\n      return state.concat(action.datas);\n    case 'CREATE':\n      return state.concat(action.todo);\n    case 'TOGGLE':\n      return state.map((todo) =>\n        todo.id === action.id ? { ...todo, done: !todo.done } : todo\n      );\n    case 'REMOVE':\n      return state.filter((todo) => todo.id !== action.id);\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children }) {\n  const [state, dispatch] = useReducer(todoReducer, initialTodos);\n  const nextId = useRef(state.id);\n\n  return (\n    <TodoStateContext.Provider value={state}>\n      <TodoDispatchContext.Provider value={dispatch}>\n        <TodoNextIdContext.Provider value={nextId}>\n          {children}\n        </TodoNextIdContext.Provider>\n      </TodoDispatchContext.Provider>\n    </TodoStateContext.Provider>\n  );\n}\n\nexport function useTodoState() {\n  const context = useContext(TodoStateContext);\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n  return context;\n}\nexport function useTodoDispatch() {\n  const context = useContext(TodoDispatchContext);\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n  return context;\n}\nexport function useTodoNextId() {\n  const context = useContext(TodoNextIdContext);\n  if (!context) {\n    throw new Error('Cannot Find TodoProvider');\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"module"}